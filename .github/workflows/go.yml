name: Go

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test on Go ${{ matrix.go-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.20', '1.21', '1.22', '1.23', '1.24']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        check-latest: true

    - name: Get dependencies
      run: go mod download

    - name: Test
      run: go test -v ./...

    - name: Vet
      run: go vet ./...

    - name: Setup Go Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-

    - name: Run staticcheck
      # Only run staticcheck on Go 1.21+ since the latest versions require newer Go
      if: ${{ matrix.go-version != '1.20' }}
      run: |
        go install honnef.co/go/tools/cmd/staticcheck@latest
        staticcheck ./...

  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
        check-latest: true

    - name: Setup Go Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-1.24-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-1.24-

    - name: Get dependencies
      run: go mod download

    - name: Generate coverage report
      run: go test -coverprofile=coverage.out -covermode=atomic ./...

    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
